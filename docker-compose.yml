version: '3.7'
services:
  editor-server: #service name
    build:
      context: . #当前目录
      dockerfile: Dockerfile #基于dockerfile创建
    image: editor-server #依赖于dockerfile创建的镜像
    container_name: editor-server
    ports:
      - 8081:3000
   
  editor-redis:
    image: redis
    container_name: editor-redis #容器名称
    ports:
      #宿主机 可以用127.0.0.1:6378 即可连接容器中的数据库
      - 6378:6379
    environment:
      - TZ=Asia/Shanghai #设置时区
  editor-mysql:
    image: mysql
    container_name: editor-mysql
    restart: always
    privileged: true # 高权限 执行下面的 mysql/init
    command: --default-authentication-plugin=mysql_native_password
    volumes:
      - '.docker-volumes/mysql/log:/var/log/mysql' #记录日志
      - '.docker-volumes/mysql/data:/var/lib/mysql' #数据持久化
      - './mysql/init:/docker-entrypoint-initdb.d' #初始化sql
    environment:
      # - MYSQL_ROOT_PASSWORD=123456
      - MYSQL_DATABASE=editor_server
      - MYSQL_ROOT_PASSWORD=123456
      - TZ=Asia/Shanghai
    ports:
      - 3305:3306
  editor-mongo:
    image: mongo
    container_name: editor-mongo
    restart: always
    volumes:
      - '.docker-volumes/mongo/data:/data/db' #数据持久化
    environment:
      - MONGO_INITDB_DATABASE=editor_server
      - TZ=Asia/Shanghai
    ports:
      - 27016:27017
